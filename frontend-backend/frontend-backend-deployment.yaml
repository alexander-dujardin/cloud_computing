apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend-backend
  template:
    metadata:
      labels:
        app: frontend-backend
    spec:
      containers:
        - name: frontend-backend
          image: front-backend-image
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3000
          env:
            - name: DB_HOST
              value: "mysql"
            - name: DB_USER
              value: "root"
            - name: DB_PASSWORD
              value: "root"
            - name: DB_NAME
              value: "images"
            - name: TZ
              value: "Europe/Brussels"
          resources:  # Define resource requests and limits
            requests:
              memory: "512Mi"
              cpu: "500m"
            limits:
              memory: "2Gi"
              cpu: "1"
---
apiVersion: v1
kind: Service
metadata:
  name: front-backend-service
spec:
  type: LoadBalancer  # or NodePort, depending on your use case
  selector:
    app: frontend-backend
  ports:
    - protocol: TCP
      port: 3000  # Expose on port 80 for convenience
      targetPort: 3000